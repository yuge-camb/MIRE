import React from 'react';
import { CheckCircle, XCircle, AlertTriangle, Clock } from 'lucide-react';

// Status Icon Component - Reusable icon based on requirement status
const StatusIcon = ({ status, size = 18 }) => {
  switch(status) {
    case 'validated': return <CheckCircle size={size} className="text-green-500" />;
    case 'rejected': return <XCircle size={size} className="text-red-500" />;
    case 'stale': return <AlertTriangle size={size} className="text-amber-500" />;
    default: return <Clock size={size} className="text-gray-500" />;
  }
};

// Requirement Card Component - Template for each requirement
const RequirementCard = ({ requirement, onValidate, onReject }) => {
  const getStatusClass = (status) => {
    switch(status) {
      case 'validated': return 'border-green-200 bg-green-50';
      case 'rejected': return 'border-red-200 bg-red-50';
      case 'stale': return 'border-amber-200 bg-amber-50';
      default: return 'border-gray-200 bg-white';
    }
  };

  return (
    <div className={`p-3 border rounded ${getStatusClass(requirement.status)}`}>
      <div className="flex justify-between mb-2">
        <div className="flex items-center gap-1">
          <StatusIcon status={requirement.status} />
          <span className="text-xs text-gray-500">{requirement.id}</span>
        </div>
        <div className="flex gap-1">
          {requirement.status !== 'validated' && requirement.status !== 'stale' && (
            <button 
              onClick={() => onValidate(requirement)}
              className="p-1 rounded hover:bg-green-100"
            >
              <CheckCircle size={16} className="text-green-600" />
            </button>
          )}
          {requirement.status !== 'rejected' && requirement.status !== 'stale' && (
            <button 
              onClick={() => onReject(requirement)}
              className="p-1 rounded hover:bg-red-100"
            >
              <XCircle size={16} className="text-red-600" />
            </button>
          )}
        </div>
      </div>
      <p className="text-sm">{requirement.text}</p>
    </div>
  );
};

// Main Requirements Panel - Currently empty container
const RequirementsPanel = () => {
  return (
    <div className="w-96 border-l border-gray-200 h-screen overflow-auto p-4">
      <div className="sticky top-0 bg-white pb-2 border-b border-gray-200 mb-4">
        <h2 className="text-lg font-semibold">Requirements</h2>
        <p className="text-sm text-gray-600">Generated from your survey responses</p>
      </div>
      {/* Requirements will be rendered here when state is added */}
    </div>
  );
};

export default RequirementsPanel;